procedure TStringArray.QuickSort(L, R: Integer);
var
  I, J: Integer;
  P: string;
begin
  repeat
    I := L;
    J := R;
    P := PStringItemList(FMemory)^[(L + R) shr 1].FString;
    repeat
      while (SmallInt(FCompProc(PStringItemList(FMemory)^[I].FString, P)) < 0) do
        Inc(I);
      while (SmallInt(FCompProc(PStringItemList(FMemory)^[J].FString, P)) > 0) do
        Dec(J);
      if (I <= J) then
      begin
        ExchangeItems(I, J);
        Inc(I);
        Dec(J);
      end;
    until (I > J);
    if (L < J) then
      QuickSort(L, J);
    L := I;
  until (I >= R);
end;

procedure TStringArray.Sort(Compare: TCompareProc);
begin
  if (SortOrder <> tsNone) and (Count > 1) then
    QuickSort(0, Count - 1);
end;
