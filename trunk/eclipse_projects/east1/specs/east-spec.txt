начну-ка я очередную попытку что нибудь в районе адвансед ИИ написать.

для начала возьму коротюсенькую - 3 строки - спецификацию и попробую под нее заточить 
- создать - автоматич.программиста.

причем знания о Яве он будет получать только из джавадоков, без ручного ввода знаний. 
Ну еще из сырцов явы.

вручную будут вводиться только общие знания о мире - например, что такое TCP или стрим.

уже берусь писать ЕЯ-анализатор на базе автоматического транслятора рус-енг, енг-рус 
(системы "ЭТАП"), у меня сырцы ЭТАПа есть

сразу кодить берусь, а по дороге разгребать буду подводные камни

уже такого авт.программиста, если его написать, достаточно для канд.диссертации

ея - естественный язык
ии - иск.интеллект

Т.е. он попытается реализовать java код, который бы выдавал то, что 
задано этой трехстрочной спецификацией.


Q: А в какой форме в нем знания будут храниться?
A: ноды, линки, графы

куча графов

заинтерлинканы все концепты друг с другом

хотя в деталях я все очень слабо представляю

Q: Ну, они-же как-то должны сформироваться. Типа сам процесс обучения меня больше фсего интересует. Как-бы будет 
учитель-человек, или как?

A: самое навороченное - анализатор и завершитель паттернов - буду на яве жестко вписывать

а как базу знаний буду формировать пока не решил

еще не очень понимаю, каких сортов знания потребуются

логические знания можно в OpenCYC-базе хранить

но вот про паттерны еще муть голубая в голове

короче поле непаханное для высаживания всяких умных идей и решений :)

Если хватит тяму до конца дотянуть, ибо работы невпроворот :)

Одни джавадоки понять, даже в объеме нескольких выбранных классов - 
еще та задача, очень развесистая.



Пока что при написании своего программера очень надеюсь на силу шаблонного мышления (pattern matching), надеюсь, 
что удастся хорошо эффективно реализовать, и надеюсь что других механизмов не понадобится.

Как и кем будут задаваться шаблоны - пока вопрос не очень ясный. Надеюсь, что удастся свести к минимуму число 
шаблонов, жестко запрограммированных при создании системы.



взять примеры спецификаций, и *наиболее обобщенным образом* создать по ним программные продукты


т.е. мой программист только конкретные спецификации будет уметь реализовывать
несколько конкретных спецификаций, не больше
если моему программеру подсунуть новую спецификацию, на которой его не тренировали, 
то он скорее всего обломится